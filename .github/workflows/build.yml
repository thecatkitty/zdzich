name: Build

on:
  pull_request:
    branches: [main]
  push:
    tags: [6.*]

jobs:
  Build:
    name: Build for ${{ matrix.platform.name }}

    runs-on: ${{ matrix.platform.os }}
    strategy:
      matrix:
        platform:
          - name: DOS (IA16)
            target: dos-ia16
            os: ubuntu-latest
            flags: -DCMAKE_TOOLCHAIN_FILE=ext/nicetia16/cmake/DOS-GCC-IA16.cmake
          - name: Linux
            target: linux
            os: ubuntu-latest
          - name: macOS
            target: macos
            os: macos-latest
          - name: Windows (x64)
            target: windows-x64
            os: windows-latest
            flags: -DCMAKE_BUILD_TYPE=Release
          - name: Windows (IA32)
            target: windows-ia32
            os: windows-latest
            flags: -DCMAKE_BUILD_TYPE=Release -A Win32

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Fetch nicetia16
        if: matrix.platform.target == 'dos-ia16'
        uses:  dsaltares/fetch-gh-release-asset@1.1.1
        with:
          repo: thecatkitty/nicetia16
          version: tags/REL-20240425
          file: nicetia16-REL-20240425.zip
          target: ext/nicetia16.zip

      - name: Install DOS dependencies
        if: matrix.platform.target == 'dos-ia16'
        run: |
          sudo add-apt-repository ppa:tkchia/build-ia16
          sudo apt update
          sudo apt install gcc-ia16-elf libi86-ia16-elf -y
          unzip ext/nicetia16.zip -d ext/nicetia16

      - name: Build for ${{ matrix.platform.name }}
        run: |
          git fetch --depth=1 origin +refs/tags/*:refs/tags/* || true
          cmake -S . -B build -DCMAKE_INSTALL_PREFIX=bin ${{ matrix.platform.flags }}
          cmake --build build --target install --config Release

      - name: Prepare release info
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          git tag -l --format='%(contents:subject)' ${{ github.ref_name }} | sed -r "s/^.+: //" > bin/RELEASE.md
  
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: zdzich-${{ matrix.platform.target }}
          path: |
            bin

  Release:

    runs-on: ubuntu-latest
    needs: Build
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Fetch build output
        uses: actions/download-artifact@v3
        with:
          path: zdzich
          
      - name: Prepare archive
        run: |
          cd zdzich
          zip -r ../zdzich-${{ github.ref_name }}.zip dos-ia16 windows-x64 windows-ia32

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          name: Wersja ${{ github.ref_name }}
          body_path: zdzich/dos-ia16/RELEASE.md
          files: zdzich-${{ github.ref_name }}.zip
